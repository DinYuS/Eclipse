package com.ali.dao.Impl;

import java.util.List;

import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;

import com.ali.dao.UserDao;
import com.ali.domain.User;
import com.ali.util.JDBCUtils;

public class UserDaoImpl implements UserDao {
//使用jdbcTemplate简化CRUD
	
	private JdbcTemplate template=new JdbcTemplate(JDBCUtils.getDataSource());
	
	@Override
	public User findUserByUsernameAndPassword(String username, String password) {
		// TODO 自动生成的方法存根
		//1.sql
		try {
			String sql="SELECT * FROM user WHERE username=? AND password=?";
		}
		
		return null;
	}

	@Override
	public void add(User user) {
		// TODO 自动生成的方法存根
		//定义SQL语句
		String sql="INSERT INTO user VALUES (null,?,?,?,?,?,?,?,?)";
		//执行SQL语句
		template.update(sql,
				user.getUsername(),
				user.getPassword(),
				user.getName(),
				user.getGender(),
				user.getAge(),
				user.getAdress(),
				user.getQq(),
				user.getEmail(),
				user.getId()
				);
		
		
	}

	@Override
	public void update(User user) {
		// TODO 自动生成的方法存根
		String sql="UPDATE user SET id=?, username=?, password=?, name=?, gender=?, age=?, adress=?, qq=?, email=? WHERE id=?";                         
			template.update(sql,
				user.getUsername(),
				user.getPassword(),
				user.getName(),
				user.getGender(),
				user.getAge(),
				user.getAdress(),
				user.getQq(),
				user.getEmail(),
				user.getId()
				);
	}

	@Override
	public void delete(int id) {
		// TODO 自动生成的方法存根
		String sql="DELETE FROM user WHERE id=?";
		template.update(sql,id);
	}

	@Override
	public User findById(int id) {
		// TODO 自动生成的方法存根
		//1.定义SQL
		String sql="SELECT * FROM user WHERE id=?";
		//2.执行SQL
		return template.queryForObject(sql, new BeanPropertyRowMapper<User>(User.class),id);
	}

	@Override
	public List<User> findAll() {
		// TODO 自动生成的方法存根
		//使用JDBC操作数据库
		//1、定义SQL语句
		String sql="SELECT * FROM user";
		//返回值
		List list=template.query(sql, new BeanPropertyRowMapper<User>(User.class));
		return list;
	}

}
